{"version":3,"sources":["utils/images.js","assets/img/logo.png","redux/constants/ActionTypes.js","redux/actions/getItem.js","containers/layouts/Header.jsx","components/LoadingSpinner.jsx","containers/layouts/Layout.jsx","utils/restCaller.js","utils/cleaner.js","utils/API.js","components/MatchCard.jsx","components/MatchesList.jsx","containers/Home.jsx","utils/validators.js","redux/actions/loading.js","containers/Login.jsx","redux/actions/user.js","containers/SignUp.jsx","containers/AuthorizedRoute.jsx","containers/Root.jsx","redux/sagas/getItem.js","redux/sagas/index.js","redux/reducer/loading.js","redux/reducer/items.js","redux/reducer/user.js","redux/reducer/index.js","redux/store.js","serviceWorker.js","index.js"],"names":["images","logo","ActionTypes","SourceType","resetStore","type","Header","props","toggle","setState","isOpen","state","adocSearch","payload","dispatch","search","query","skip","history","push","resetHome","reacordQuery","handleEnter","event","key","imageName","isLoggedIn","localStorage","getItem","Navbar","light","color","expand","NavbarBrand","onClick","className","src","alt","width","height","NavbarToggler","this","Collapse","navbar","Nav","NavItem","InputGroup","Input","value","onChange","e","target","onKeyPress","InputGroupAddon","addonType","Button","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","to","DropdownItem","divider","React","Component","HeaderWithRouter","withRouter","connect","filters","itemsReducer","LoadingSpinner","colorFirst","colorSecond","strokeWidth","radiusFirst","radiusSecond","xmlns","viewBox","preserveAspectRatio","cx","cy","ng-attr-r","ng-attr-stroke-width","ng-attr-stroke","ng-attr-stroke-dasharray","fill","strokeLinecap","r","stroke","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","ng-attr-stroke-dashoffset","strokeDashoffset","Layout","loading","Fragment","children","loadingReducer","loadState","favourite_team","userReducer","RESTCaller","method","apiBaseUrl","reqUrl","reqOpts","data","headers","Accept","Promise","resolve","reject","a","url","options","toLowerCase","axios","then","response","catch","error","sanitize","item","id","title","prune","description","content","recommendationServer","process","newsapiHeadlinesUrl","newsapiBaseUrl","API","source","cached","user","JSON","parse","token","Authorization","lscache","get","console","log","args","filter","map","cleaner","articles","set","MatchCard","urlToImage","liked","ids","includes","preventDefault","stopPropagation","formData","descriptionText","contentText","body","length","rel","href","style","size","likeHandler","keyValue","MatchesList","likes","matches","isScrolling","registerChild","onChildScroll","scrollTop","disableHeight","ref","autoHeight","onScroll","overscanRowCount","rowCount","rowHeight","rowRenderer","index","isVisible","Home","loadMore","itemsApiInProgress","items","itemsApiInError","totalItemCount","pageStart","hasMore","loader","isEmptyString","updateLoadingAction","useState","username","setUsername","validationUsernameMsg","setValidationUsernameMsg","password","setPassword","validationPasswordMsg","setValidationPasswordMsg","validationMsg","setValidationMsg","isModalOpen","setIsModalOpen","useEffect","closeModal","validateForm","touchedElem","hasInvalidUsername","hasInvalidPassword","handleInputChange","ev","name","Modal","centered","backdrop","ModalBody","Form","onSubmit","res","_id","setItem","stringify","err","FormGroup","Label","for","invalid","placeholder","FormFeedback","maxLength","Alert","ModalFooter","padding","hasInValidPassword","hasInValidUsername","errorResponse","minLength","AuthorizedRoute","component","rest","render","pathname","Root","path","exact","Login","SignUp","RootWithRouter","getItems","root","select","limit","trim","pageIndex","parseInt","call","urls","put","all","takeLatest","action","fork","initialState","Object","assign","clear","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootsaga","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6ee80a4.chunk.js","sourcesContent":["import logo from \"assets/img/logo.png\";\n\nconst images = {\n  logo\n};\nexport default function(imageName) {\n  return images[imageName];\n}\n","export default __webpack_public_path__ + \"static/media/logo.2356964b.png\";","export const ActionTypes = {\n  UPDATE_LOADING: \"UPDATE_LOADING\",\n  GET_ITEMS: \"GET_ITEMS\",\n  GET_ITEMS_SUCCESS: \"GET_ITEMS_SUCCESS\",\n  GET_ITEMS_FAILURE: \"GET_ITEMS_FAILURE\",\n  ITEMS_FILTER_CHANGE: \"ITEMS_FILTER_CHANGE\",\n  CLEAR_ITEMS_LIST: \"CLEAR_ITEMS_LIST\",\n  RESET_STORE: \"RESET_STORE\",\n  SAVE_USER: \"SAVE_USER\",\n  USER_LOGOUT: \"USER_LOGOUT\"\n};\n\nexport const SourceType = {\n  NEWSAPI_SEARCH: \"NEWSAPI_SEARCH\",\n  NEWSAPI_HEADLINES: \"NEWSAPI_HEADLINES\",\n  RECOMMENDATIONS: \"RECOMMENDATIONS\",\n  LIKED: \"LIKED\"\n};\n\n// export default ActionTypes;\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nexport const getItems = sourceType => {\n  return {\n    type: ActionTypes.GET_ITEMS,\n    payload: sourceType\n  };\n};\n\nexport const resetStore = () => {\n  return {\n    type: ActionTypes.RESET_STORE\n  };\n};\n\nexport const clearItems = () => {\n  return {\n    type: ActionTypes.CLEAR_ITEMS_LIST\n  };\n};\n\nexport const itemsFilterChange = payload => ({\n  type: ActionTypes.ITEMS_FILTER_CHANGE,\n  payload\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Navbar,\n  Nav,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\n\nimport getImage from \"utils/images\";\nimport { itemsFilterChange, resetStore } from \"redux/actions/getItem\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\", isOpen: false };\n  }\n\n  toggle = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  adocSearch = () => {\n    this.props.dispatch(\n      itemsFilterChange({ search: this.state.query, skip: 0 })\n    );\n    this.props.dispatch(resetStore());\n    this.props.history.push(`/search`);\n  };\n\n  resetHome = () => {\n    this.props.dispatch(resetStore({}));\n    this.props.history.push(`/home`);\n  };\n\n  reacordQuery = (query) => {\n    this.setState({ query });\n  };\n\n  handleEnter = (event) => {\n    if (event.key === \"Enter\") {\n      this.adocSearch();\n    }\n  };\n\n  render() {\n    const isLoggedIn = localStorage.getItem(\"user\");\n    return (\n      <Navbar light color=\"light\" expand=\"md\">\n        <NavbarBrand onClick={() => this.resetHome()}>\n          <img\n            className=\"Navbar_Logo\"\n            src={getImage(\"logo\")}\n            alt=\"logo\"\n            width=\"35\"\n            height=\"35\"\n          />\n        </NavbarBrand>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"nav-bar\">\n            <NavItem className=\"search-bar\">\n              <InputGroup className=\"search-bar-content\">\n                <Input\n                  value={this.state.query}\n                  onChange={(e) => this.reacordQuery(e.target.value)}\n                  onKeyPress={this.handleEnter}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"primary\" onClick={this.adocSearch}>\n                    Search\n                  </Button>\n                </InputGroupAddon>\n              </InputGroup>\n            </NavItem>\n            <NavItem className=\"nav-flushright\">\n              {isLoggedIn ? (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle caret nav>\n                    Me\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <Link to=\"recommendations\">\n                      <DropdownItem> Recommendations </DropdownItem>{\" \"}\n                    </Link>\n                    <DropdownItem divider />\n                    <Link to=\"liked\">\n                      <DropdownItem> Liked </DropdownItem>{\" \"}\n                    </Link>\n                    <DropdownItem divider />\n                    <Link to=\"login\">\n                      <DropdownItem> Logout </DropdownItem>{\" \"}\n                    </Link>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              ) : (\n                <div>\n                  <Link to=\"login\"> Login </Link>\n                </div>\n              )}\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    filters: state.itemsReducer.filters,\n  };\n};\n\nconst HeaderWithRouter = withRouter((props) => <Header {...props} />);\nexport default connect(mapStateToProps)(HeaderWithRouter);\n","import React from \"react\";\n\nexport const LoadingSpinner = props => {\n  const {\n    width = 150,\n    height = 150,\n    colorFirst = \"#1d3f72\",\n    colorSecond = \"#5699d2\",\n    strokeWidth = 4,\n    radiusFirst = 40,\n    radiusSecond = 35\n  } = props;\n  return (\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      className=\"lds-double-ring\"\n    >\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c1}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusFirst}\n        strokeWidth={strokeWidth}\n        stroke={colorFirst}\n        strokeDasharray=\"62.83185307179586 62.83185307179586\"\n        transform=\"rotate(199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius2}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c2}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray2}}\"\n        ng-attr-stroke-dashoffset=\"{{config.dashoffset2}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusSecond}\n        strokeWidth={strokeWidth}\n        stroke={colorSecond}\n        strokeDasharray=\"54.97787143782138 54.97787143782138\"\n        strokeDashoffset=\"54.97787143782138\"\n        transform=\"rotate(-199.69 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;-360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\nimport LoadingSpinner from \"components/LoadingSpinner\";\n\nclass Layout extends React.Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <React.Fragment>\n        {loading && (\n          <div className=\"loading\">\n            <LoadingSpinner />\n          </div>\n        )}\n        <Header />\n        <div className=\"main-app\">{this.props.children}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loadingReducer.loadState,\n    favourite_team: state.userReducer.favourite_team\n  };\n};\nexport default connect(mapStateToProps)(Layout);\n","import axios from \"axios\";\n\nconst RESTCaller = ({\n  method = \"get\",\n  apiBaseUrl,\n  reqUrl,\n  reqOpts,\n  data = {},\n  headers = {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n}) => {\n  return new Promise(async (resolve, reject) => {\n    let url = `${apiBaseUrl}`;\n    if (reqUrl) {\n      url = `${apiBaseUrl}/${reqUrl}`;\n    }\n    if (reqOpts) {\n      url = `${url}?${reqOpts}`;\n    }\n\n    let options = {\n      method,\n      url,\n      data,\n      headers\n    };\n    if (method.toLowerCase() === \"get\") {\n      delete options[\"data\"];\n    }\n    // console.log('REST call:', url, ' ', apiBaseUrl, ' ', reqUrl, ' ', reqOpts)\n    axios({ ...options })\n      .then(response => {\n        resolve(response);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nexport default RESTCaller;\n","const sanitize = item => {\n  if (!item.id) {\n    item.id = item.url || item.title;\n  }\n  return item;\n};\n\nconst prune = item => {\n  if (!item.title || (!item.description && !item.content)) {\n    return false;\n  }\n  return true;\n};\n\nexport default function(items = []) {\n  return items.filter(prune).map(sanitize);\n}\n","import { SourceType } from \"../redux/constants/ActionTypes\";\nimport RESTCaller from \"./restCaller.js\";\nimport cleaner from \"./cleaner\";\n\nimport lscache from \"lscache\";\n\nconst recommendationServer = process.env.REACT_APP_SERVER_URL;\n// const newsapiHeadlinesUrl = process.env.REACT_APP_NEWSAPI_HEADLINES;\nconst newsapiHeadlinesUrl = `${process.env.REACT_APP_SERVER_URL}/${process.env.REACT_APP_NEWSAPI_HEADLINES}`;\n// const newsapiBaseUrl = process.env.REACT_APP_NEWSAPI_SEARCH;\nconst newsapiBaseUrl = `${process.env.REACT_APP_SERVER_URL}/${process.env.REACT_APP_NEWSAPI_SEARCH}`;\n\nconst LSCACHE_TIMEOUT = 10;\n\nconst API = ({\n  method,\n  reqUrl,\n  reqOpts,\n  data = {},\n  source,\n  cached = true,\n  headers = {\n    \"content-type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n}) => {\n  let apiBaseUrl = \"INVALID\";\n  if (source) {\n    switch (source) {\n      case SourceType.NEWSAPI_HEADLINES:\n        apiBaseUrl = newsapiHeadlinesUrl;\n        break;\n      case SourceType.NEWSAPI_SEARCH:\n        apiBaseUrl = newsapiBaseUrl;\n        break;\n      case SourceType.LIKED:\n      case SourceType.RECOMMENDATIONS:\n        const user = localStorage.getItem(\"user\");\n        if (!user) {\n          return;\n        }\n        let { token = false } = user ? JSON.parse(user) : {};\n        headers = token\n          ? { ...headers, Authorization: `Bearer ${token}` }\n          : headers;\n        apiBaseUrl = recommendationServer;\n        break;\n      default:\n        apiBaseUrl = recommendationServer;\n        break;\n    }\n  } else {\n    apiBaseUrl = recommendationServer;\n  }\n\n  const url = `${apiBaseUrl}${reqUrl}${reqOpts}`;\n  if (method.toLowerCase() === \"get\") {\n    if (cached) {\n      const response = lscache.get(url);\n      if (response) {\n        return new Promise((resolve, reject) => {\n          resolve(response);\n        }).catch((error) => console.log(error));\n      }\n    }\n  }\n  // console.log('REST url: ', url, 'apiBaseUrl', apiBaseUrl, 'reqUrl', reqUrl, 'reqOpts', reqOpts)\n  let args = { method, apiBaseUrl, data, headers };\n  if (reqUrl) {\n    args.reqUrl = reqUrl;\n  }\n  if (reqOpts) {\n    args.reqOpts = reqOpts;\n  }\n  // console.log('args', args)\n  return RESTCaller(args).then((response) => {\n    // console.log(\"%c{res}\", \"color: green\", \" => \", response); // eslint-disable-line no-console\n    switch (source) {\n      case SourceType.NEWSAPI_HEADLINES:\n      case SourceType.NEWSAPI_SEARCH:\n        response.data = cleaner(response.data.articles);\n      case SourceType.RECOMMENDATIONS:\n        break;\n      default:\n        break;\n    }\n    lscache.set(url, response, LSCACHE_TIMEOUT);\n    return new Promise((resolve, reject) => {\n      resolve(response);\n    }).catch((error) => console.log(error));\n  });\n};\n\nexport default API;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport API from \"utils/API\";\nimport { SourceType } from \"../redux/constants/ActionTypes\";\n\nclass MatchCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlToImage: \"\",\n      liked: props.ids.includes(props.item.url)\n    };\n    console.log('ids', props.ids)\n  }\n\n  componentDidMount() {\n    const { item } = this.props;\n    if (item.urlToImage) {\n      this.setState({ urlToImage: item.urlToImage });\n    }\n  }\n\n  async likeHandler(event) {\n    const { item } = this.props;\n    const { liked } = this.state;\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState({ liked: !liked });\n    let reqUrl = \"\";\n    let formData = \"\";\n    if (!liked) {\n      // console.log('Liked........')\n      reqUrl = \"like\";\n      formData = item;\n    } else {\n      // console.log('Disiked........')\n      reqUrl = \"dislike\";\n      formData = item.id;\n    }\n    await API({\n      method: \"POST\",\n      source: SourceType.LIKED,\n      cached: false,\n      reqUrl,\n      data: formData\n    });\n    console.log(\"item\", item);\n  }\n\n  render() {\n    const { description, url, title, content } = this.props.item;\n    const { urlToImage, liked } = this.state;\n    const descriptionText = description ? description : \"\";\n    const contentText = content ? content : \"\";\n    const body =\n      descriptionText.length >= contentText.length\n        ? descriptionText\n        : contentText;\n\n    return (\n      <a\n        rel=\"noopener noreferrer\"\n        href={url}\n        target=\"_blank\"\n        key={this.props.keyValue}\n        style={this.props.style}\n        className=\"a-no-style\"\n      >\n        <div className=\"MatchCard\">\n          <div className=\"MatchCard_detail\">\n            <div className=\"MatchCard_title_bar\">\n              <strong className=\"MatchCard_title\">{title}</strong>\n              <Button\n                size=\"sm\"\n                color={liked ? \"success\" : \"secondary\"}\n                className=\"MatchCard_like\"\n                onClick={event => this.likeHandler(event)}\n              >\n                {liked ? \"-\" : \"^\"}\n              </Button>\n            </div>\n            <div className=\"MatchCard_content\">\n              <div className=\"MatchCard_desc\">{body}</div>\n              {urlToImage ? (\n                <div className=\"MatchCard_img\">\n                  <img src={urlToImage} alt=\"img\" />\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n          </div>\n        </div>\n      </a>\n    );\n  }\n}\n\nexport default MatchCard;\n","import React from \"react\";\nimport { AutoSizer, WindowScroller, List } from \"react-virtualized\";\n\nimport MatchCard from \"./MatchCard\";\n\nclass MatchesList extends React.Component {\n  constructor(props) {\n    super(props);\n    const likes = localStorage.getItem(\"likes\");\n    this.state = {\n      ids: likes ? JSON.parse(likes) : []\n    };\n    console.log('likes', likes);\n  }\n\n  render() {\n    const { matches } = this.props;\n    return (\n      <div className=\"MatchesList\">\n        <div className=\"app-container\">\n          <WindowScroller>\n            {({\n              height,\n              isScrolling,\n              registerChild,\n              onChildScroll,\n              scrollTop\n            }) => (\n              <div className=\"WindowScroller\">\n                <AutoSizer disableHeight>\n                  {({ width }) => (\n                    <div ref={registerChild}>\n                      <List\n                        autoHeight\n                        height={height}\n                        width={width}\n                        scrollTop={scrollTop}\n                        isScrolling={isScrolling}\n                        onScroll={onChildScroll}\n                        overscanRowCount={4}\n                        rowCount={matches.length}\n                        rowHeight={180}\n                        rowRenderer={({\n                          index,\n                          isScrolling,\n                          isVisible,\n                          key,\n                          style\n                        }) => {\n                          return (\n                            <MatchCard\n                              ids={this.state.ids}\n                              item={matches[index]}\n                              keyValue={key}\n                              {...{\n                                index,\n                                isScrolling,\n                                key,\n                                isVisible,\n                                style\n                              }}\n                            />\n                          );\n                        }}\n                      />\n                    </div>\n                  )}\n                </AutoSizer>\n              </div>\n            )}\n          </WindowScroller>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MatchesList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { FaSearchMinus } from \"react-icons/fa\";\n\nimport { getItems, resetStore } from \"redux/actions/getItem\";\nimport MatchesList from \"components/MatchesList\";\nimport LoadingSpinner from \"components/LoadingSpinner\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log('Calling constructor', props)\n    props.dispatch(resetStore({}));\n  }\n\n  componentDidMount() {}\n\n  loadMore = () => {\n    const { dispatch, itemsApiInProgress, type } = this.props;\n    // console.log('source', type)\n    !itemsApiInProgress && dispatch(getItems(type));\n  };\n\n  render() {\n    let {\n      items,\n      itemsApiInError,\n      filters,\n      totalItemCount,\n      itemsApiInProgress,\n    } = this.props;\n    let { skip } = filters;\n    return (\n      <div className=\"Home\">\n        <>\n          <div className=\"center Home_body_container\">\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.loadMore}\n              style={{ width: \"100%\" }}\n              hasMore={!itemsApiInError && skip <= totalItemCount}\n              loader={<div key={\"loading\"}></div>}\n            >\n              {items.length ? (\n                <MatchesList matches={items} />\n              ) : itemsApiInProgress ? (\n                <div className=\"Home_body_container_ItemsApiInProgress\">\n                  <LoadingSpinner />\n                </div>\n              ) : (\n                <div className=\"Home_noResult\">\n                  <FaSearchMinus size={60} />\n                  <h4 className=\"title\">No result found</h4>\n                </div>\n              )}\n            </InfiniteScroll>\n          </div>\n        </>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    source: state.itemsReducer.source,\n    loading: state.loadingReducer.loadState,\n    items: state.itemsReducer.items,\n    itemsApiInProgress: state.itemsReducer.itemsApiInProgress,\n    itemsApiInError: state.itemsReducer.itemsApiInError,\n    totalItemCount: state.itemsReducer.totalItemCount,\n    filters: state.itemsReducer.filters,\n  };\n};\nexport default connect(mapStateToProps)(Home);\n","export const isValidPassword = value => {\n  if (value) {\n    if (\n      // eslint-disable-next-line\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{6,})/.test(\n        value\n      )\n    ) {\n      return false;\n    } else {\n      return \"Password is not strong\";\n    }\n  }\n  return \"Password is required\";\n};\n\nexport const isValidEmail = value => {\n  if (value && /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    return false;\n  }\n  return \"Invalid email address\";\n};\nexport const isEmptyString = value => {\n  if (value && value.length) {\n    return false;\n  }\n  return \"Feild is required\";\n};\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nexport const updateLoadingAction = loading => ({\n  type: ActionTypes.UPDATE_LOADING,\n  payload: loading\n});\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport get from \"lodash/get\";\n\nimport { isEmptyString } from \"utils/validators\";\nimport API from \"utils/API\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\nimport { saveUser } from \"redux/actions/user\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [validationUsernameMsg, setValidationUsernameMsg] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validationPasswordMsg, setValidationPasswordMsg] = useState(false);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    return () => {\n      closeModal();\n    };\n  }, []);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const isValid = validateForm();\n\n    if (isValid) {\n      const formData = {\n        username,\n        password\n      };\n      // this.props.onSubmit(formData);\n      props.dispatch(updateLoadingAction(true));\n      API({\n        method: \"POST\",\n        reqUrl: \"auth/signin\",\n        data: formData\n      })\n        .then(res => {\n          console.log(\"res\", res);\n          delete res.data._id;\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\n          props.dispatch(saveUser(res.data));\n          props.dispatch(updateLoadingAction(false));\n\n          props.history.push(\"/home\");\n        })\n        .catch(err => {\n          props.dispatch(updateLoadingAction(false));\n          const error = get(err, \"response.data\", \"\");\n          if (error) {\n            setValidationMsg(error);\n          } else {\n            setValidationMsg(\"Oops! something went wrong\");\n          }\n        });\n    }\n  };\n\n  const validateForm = touchedElem => {\n    let hasInvalidUsername = \"\",\n      hasInvalidPassword = \"\";\n    if (!touchedElem) {\n      hasInvalidUsername = isEmptyString(username);\n      hasInvalidPassword = isEmptyString(password);\n      setValidationUsernameMsg(hasInvalidUsername);\n      setValidationPasswordMsg(hasInvalidPassword);\n    } else {\n      setValidationUsernameMsg(false);\n      setValidationPasswordMsg(false);\n    }\n    if (!username || !password || hasInvalidUsername || hasInvalidPassword) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = ev => {\n    if (ev.target.name === \"username\") {\n      setUsername(ev.target.value);\n    } else {\n      setPassword(ev.target.value);\n    }\n    validateForm(ev.target.name);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      toggle={() => {}}\n      className=\"Login\"\n      centered\n      backdrop={false}\n    >\n      <ModalBody className=\"Login_body\">\n        <h2 className=\"title\">ACCOUNT LOGIN</h2>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"Username\">Username</Label>\n            <Input\n              invalid={validationUsernameMsg ? true : false}\n              type=\"text\"\n              onChange={handleInputChange}\n              name=\"username\"\n              value={username}\n              placeholder=\"Enter username\"\n            />\n            <FormFeedback>\n              {validationUsernameMsg ? validationUsernameMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"password\">Pasword</Label>\n            <Input\n              invalid={validationPasswordMsg ? true : false}\n              type=\"password\"\n              onChange={handleInputChange}\n              name=\"password\"\n              maxLength={100}\n              value={password}\n              placeholder=\"Enter password\"\n            />\n            <FormFeedback>\n              {validationPasswordMsg ? validationPasswordMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button color=\"secondary\" type=\"submit\" className=\"Login_btn\">\n            Login\n          </Button>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"Login_footer\">\n        Don't have an account yet ?\n        <Link to=\"/signup\" style={{ padding: \"5px 10px\" }}>\n          Sign up\n        </Link>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default connect()(Login);\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nexport const logout = () => ({\n  type: ActionTypes.USER_LOGOUT\n});\n\nexport const saveUser = payload => ({\n  type: ActionTypes.SAVE_USER,\n  payload\n});\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n  Alert\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { isEmptyString } from \"utils/validators\";\nimport API from \"utils/API\";\nimport { updateLoadingAction } from \"redux/actions/loading\";\n\nfunction SignUp(props) {\n  const [username, setUsername] = useState(\"\");\n  const [validationUsernameMsg, setValidationUsernameMsg] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [validationPasswordMsg, setValidationPasswordMsg] = useState(false);\n  const [validationMsg, setValidationMsg] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    return () => {\n      closeModal();\n    };\n  }, []);\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const isValid = validateForm();\n\n    if (isValid) {\n      const formData = {\n        // email,\n        password,\n        username\n      };\n      // this.props.onSubmit(formData);\n      props.dispatch(updateLoadingAction(true));\n      API({\n        method: \"POST\",\n        reqUrl: \"auth/signup\",\n        data: formData\n      })\n        .then(res => {\n          props.dispatch(updateLoadingAction(false));\n          props.history.push(\"/login\");\n        })\n        .catch(err => {\n          props.dispatch(updateLoadingAction(false));\n          const errorResponse = get(err, \"response.data\", \"\");\n          console.log(\"errror\", err);\n          console.log(\"error response\", err.response);\n          if (errorResponse === \"User already exist\") {\n            setValidationUsernameMsg(errorResponse);\n          } else if (errorResponse) {\n            setValidationMsg(errorResponse);\n          } else {\n            setValidationMsg(\"Oops! something went wrong\");\n          }\n        });\n    }\n  };\n\n  const validateForm = touchedElem => {\n    let hasInValidPassword = \"\",\n      hasInValidUsername = \"\";\n    if (!touchedElem) {\n      // hasInValidEmail = isValidEmail(email);\n      hasInValidPassword = isEmptyString(password); // isValidPassword(password);\n      hasInValidUsername = isEmptyString(username);\n      // setValidationEmailMsg(hasInValidEmail);\n      setValidationPasswordMsg(hasInValidPassword);\n      setValidationUsernameMsg(hasInValidUsername);\n    } else {\n      // setValidationEmailMsg(false);\n      setValidationPasswordMsg(false);\n      setValidationUsernameMsg(false);\n    }\n    if (\n      // !email ||\n      !password ||\n      // hasInValidEmail ||\n      hasInValidPassword ||\n      hasInValidUsername\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = ev => {\n    // if (ev.target.name === \"email\") {\n    //   setEmail(ev.target.value);\n    // } else\n    if (ev.target.name === \"username\") {\n      setUsername(ev.target.value);\n    } else {\n      setPassword(ev.target.value);\n    }\n    validateForm(ev.target.name);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      toggle={() => {}}\n      className=\"Login\"\n      centered\n      backdrop={false}\n    >\n      <ModalBody className=\"Login_body\">\n        <h2 className=\"title\">ACCOUNT SIGN UP</h2>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"email\">User name</Label>\n            <Input\n              invalid={validationUsernameMsg ? true : false}\n              type=\"text\"\n              onChange={handleInputChange}\n              name=\"username\"\n              maxLength={20}\n              minLength={3}\n              value={username}\n              placeholder=\"Enter user name\"\n            />\n            <FormFeedback>\n              {validationUsernameMsg ? validationUsernameMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"password\">Pasword</Label>\n            <Input\n              invalid={validationPasswordMsg ? true : false}\n              type=\"password\"\n              onChange={handleInputChange}\n              name=\"password\"\n              maxLength={100}\n              minLength={6}\n              value={password}\n              placeholder=\"Enter password\"\n            />\n            <FormFeedback>\n              {validationPasswordMsg ? validationPasswordMsg : \"\"}\n            </FormFeedback>\n          </FormGroup>\n          <Alert color=\"danger\" isOpen={validationMsg ? true : false}>\n            {validationMsg}\n          </Alert>\n          <Button color=\"secondary\" type=\"submit\" className=\"Login_btn\">\n            Sign Up\n          </Button>\n        </Form>\n      </ModalBody>\n      <ModalFooter className=\"Login_footer\">\n        Already have an account ?\n        <Link to=\"/login\" style={{ padding: \"5px 10px\" }}>\n          login\n        </Link>\n      </ModalFooter>\n    </Modal>\n  );\n}\nexport default connect()(SignUp);\n","// This is used to determine if a user is authenticated and\n// if they are allowed to visit the page they navigated to.\n\n// If they are: they proceed to the page\n// If not: they are redirected to the login page.\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AuthorizedRoute = ({ component: Component, ...rest }) => {\n  // Add your own authentication on the below line.\n  const isLoggedIn = localStorage.getItem(\"user\") ? true : false;\n\n  // console.log('rest', rest, isLoggedIn)\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <div>\n            {/* <div>{console.log(props, rest.type)}</div> */}\n            <Component type={rest.type} {...props} />\n          </div>\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthorizedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./layouts/Layout\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport AuthorizedRoute from \"./AuthorizedRoute\";\n\nimport { SourceType } from \"../redux/constants/ActionTypes\";\n\nclass Root extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={SignUp} />\n          <Route\n            path=\"/home\"\n            key=\"home\"\n            exact\n            render={() => {\n              // console.log(\"loading home\")\n              return <Home type={SourceType.NEWSAPI_HEADLINES} />;\n            }}\n          />\n          <Route\n            path=\"/search\"\n            key=\"search\"\n            exact\n            render={() => {\n              // console.log(\"loading search\")\n              return <Home type={SourceType.NEWSAPI_SEARCH} />;\n            }}\n          />\n          <AuthorizedRoute\n            path=\"/recommendations\"\n            key=\"recommendations\"\n            type={SourceType.RECOMMENDATIONS}\n            exact\n            component={Home}\n          />\n          <AuthorizedRoute\n            path=\"/liked\"\n            key=\"liked\"\n            type={SourceType.LIKED}\n            exact\n            component={Home}\n          />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nconst RootWithRouter = withRouter(props => <Root {...props} />);\nexport default connect()(RootWithRouter);\n","import { all, call, put, takeLatest, select } from \"redux-saga/effects\";\nimport { ActionTypes, SourceType } from \"../constants/ActionTypes\";\nimport API from \"utils/API\";\nimport get from \"lodash/get\";\n\nexport function* getItems(source) {\n  // console.log('getItem', source)\n  const filters = yield select(state => state.itemsReducer.filters);\n  let { search = \"\", limit = 50, skip = 0 } = filters;\n  if (search.length) {\n    search = search.trim().toLowerCase();\n  }\n  let reqOpts = \"\";\n  let reqUrl = \"\";\n  let cached = true;\n  switch (source) {\n    case SourceType.NEWSAPI_SEARCH:\n      if (search) {\n        reqOpts = `q=${search}`;\n      } else {\n        reqOpts = `domains=thehindu.com`; // default\n      }\n    case SourceType.NEWSAPI_HEADLINES:\n      let pageIndex = 1;\n      if (skip) {\n        pageIndex = 1 + parseInt(skip / limit);\n      }\n      reqOpts = `${reqOpts}&page=${pageIndex}&pageSize=${limit}&language=en`;\n      break;\n    case SourceType.RECOMMENDATIONS:\n      cached = false;\n      reqUrl = \"list\";\n      reqOpts = `limit=${limit}`;\n      if (skip) {\n        reqOpts = `${reqOpts}&skip=${skip}`;\n      }\n      break;\n    case SourceType.LIKED:\n      reqUrl = \"liked\";\n      cached = false;\n      break;\n    default:\n      break;\n  }\n  try {\n    const response = yield call(API, {\n      method: \"GET\",\n      source,\n      cached,\n      reqUrl,\n      reqOpts\n    });\n    if (source === SourceType.LIKED) {\n      // console.log('liked', response.data)\n      const urls = response.data.map(item => item.url);\n      localStorage.setItem(\"likes\", JSON.stringify(urls));\n    }\n    yield put({\n      type: ActionTypes.GET_ITEMS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    yield put({\n      type: ActionTypes.GET_ITEMS_FAILURE,\n      payload: get(err, \"message\", \"error\")\n    });\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(ActionTypes.GET_ITEMS, action => getItems(action.payload))\n  ]);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\n// import user from \"./user\";\nimport getItems from \"./getItem\";\n\nexport default function* root() {\n  yield all([fork(getItems)]);\n}\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nconst initialState = { loadState: false };\nconst loadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOADING:\n      return { loadState: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nconst initialState = {\n  items: [],\n  itemsApiInProgress: false,\n  itemsApiInError: \"\",\n  totalItemCount: 1,\n  filters: {\n    search: \"\",\n    limit: 30,\n    skip: 0\n  }\n};\n\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_ITEMS:\n      return Object.assign({}, state, {\n        itemsApiInProgress: true,\n        itemsApiInError: \"\"\n      });\n    case ActionTypes.GET_ITEMS_FAILURE:\n      return Object.assign({}, state, {\n        itemsApiInProgress: false,\n        itemsApiInError: action.payload\n      });\n    case ActionTypes.GET_ITEMS_SUCCESS:\n      return Object.assign({}, state, {\n        items: [...state.items, ...action.payload],\n        totalItemCount: state.items.length + action.payload.length,\n        itemsApiInProgress: false,\n        filters: {\n          ...state.filters,\n          skip: state.filters.skip + state.filters.limit\n        }\n      });\n    case ActionTypes.CLEAR_ITEMS_LIST:\n      return Object.assign({}, state, {\n        items: []\n      });\n    case ActionTypes.RESET_STORE:\n      return {\n        ...initialState,\n        filters: {\n          ...initialState.filters,\n          ...{ search: state.filters.search }\n        }\n      };\n    case ActionTypes.ITEMS_FILTER_CHANGE: {\n      return Object.assign({}, state, {\n        filters: { ...state.filters, ...action.payload }\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default itemsReducer;\n","import { ActionTypes } from \"../constants/ActionTypes\";\n\nconst initialState = {\n  // email: \"\",\n  token: \"\",\n  username: \"\"\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SAVE_USER:\n      return {\n        ...state,\n        ...action.payload\n      };\n\n    case ActionTypes.USER_LOGOUT:\n      localStorage.clear();\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\n\nimport loadingReducer from \"./loading\";\nimport itemsReducer from \"./items\";\nimport userReducer from \"./user\";\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  itemsReducer,\n  userReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootsaga from \"./sagas\";\nimport rootReducer from \"./reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootsaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"react-virtualized/styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./assets/css/styles.scss\";\nimport \"./assets/css/styles-xs.scss\";\n\nimport App from \"./containers/Root\";\nimport store from \"./redux/store\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}